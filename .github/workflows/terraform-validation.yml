name: Terraform Validation

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  terraform-validation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
    
    - name: Terraform Format Check
      run: |
        cd terraform
        terraform fmt -check -recursive
      continue-on-error: true
    
    - name: Terraform Init
      run: |
        cd terraform
        # Comment out backend for validation
        sed -i 's/^  backend "s3"/  # backend "s3"/' providers.tf
        sed -i 's/^    #/    #/' providers.tf
        terraform init
    
    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate
    
    - name: Terraform Plan (Dry Run)
      run: |
        cd terraform
        # Create minimal tfvars for validation
        cat > validation.tfvars << EOF
        aws_region = "us-west-2"
        environment = "ci"
        project_name = "treza-ci"
        existing_dynamodb_table_name = "test-table"
        EOF
        terraform plan -var-file=validation.tfvars || echo "Plan completed with warnings (expected in CI)"
      continue-on-error: true

  lambda-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        cd tests
        pip install -r requirements.txt
    
    - name: Run Lambda unit tests
      run: |
        cd tests
        python -m pytest unit/ -v --tb=short
    
    - name: Run integration tests
      run: |
        cd tests
        python -m pytest integration/ -v --tb=short -m "not slow"

  docker-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Test Docker build
      run: |
        cd docker/terraform-runner
        docker build --dry-run .
    
    - name: Build Docker image (test)
      run: |
        cd docker/terraform-runner
        docker build -t treza-terraform-runner:test .

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'